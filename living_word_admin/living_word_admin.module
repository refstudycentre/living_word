<?php


/**
 * Implements hook_permission().
 */
function living_word_admin_permission() {
  $permissions = array();

  $permissions['living_word_admin_overview'] = array(
    'title' => t('LW content overview'),
    'description' => t('Allow access to the Living Word content overview page at admin/content/lw/overview'),
    'restrict access' => TRUE,
  );

  $permissions['living_word_admin_add'] = array(
    'title' => t('Add Living Word Comments'),
    'description' => t('Allow access to admin/structure/lw/add'),
  );

  $permissions['living_word_admin_proofread'] = array(
    'title' => t('Proofread Living Word Comments'),
    'description' => t('Allow access to admin/structure/lw/proofread'),
  );

  $permissions['living_word_admin_moderate'] = array(
    'title' => t('Moderate Living Word Comments'),
    'description' => t('Allow access to admin/structure/lw/moderate'),
  );

  $permissions['living_word_admin_review'] = array(
    'title' => t('Review Living Word Comments'),
    'description' => t('Allow access to admin/structure/lw/review'),
  );

  return $permissions;
}


/**
 * Implements hook_menu().
 * https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_menu/7
 */
function living_word_admin_menu() {
  $items = array();

  $items['admin/structure/lw'] = array(
    'title'             => 'Living Word',
    'description'       => 'The content workflow for Living Word Comments',
    'page callback'     => 'system_admin_menu_block_page',
    'access callback'   => 'admin_landing_page_access',
    'access arguments'  => array('admin/structure'),
    'file'              => 'system.admin.inc',
    'file path'         => drupal_get_path('module', 'system'),
  );

  $items['admin/structure/lw/add'] = array(
    'title'             => '1. Add LWCs',
    'description'       => 'Step 1: Add multiple Living Word Comments at once',
    'weight'            => 10,
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('living_word_admin_add_form'),
    'access callback'   => 'user_access',
    'access arguments'  => array('living_word_admin_add'),
    'file'              => 'living_word_admin.add.form.inc',
  );

  $items['admin/structure/lw/proofread'] = array(
    'title'             => '2. Proofread LWCs',
    'description'       => 'Step 2: Check Living Word Comments for linguistic errors',
    'weight'            => 20,
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('living_word_admin_proofread_form'),
    'access callback'   => 'user_access',
    'access arguments'  => array('living_word_admin_proofread'),
    'file'              => 'living_word_admin.proofread.form.inc',
  );

  $items['admin/structure/lw/moderate'] = array(
    'title'             => '3. Moderate LWCs',
    'description'       => 'Step 3: Check the content of Living Word Comments, set their level of detail, etc.',
    'weight'            => 30,
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('living_word_admin_moderate_form'),
    'access callback'   => 'user_access',
    'access arguments'  => array('living_word_admin_moderate'),
    'file'              => 'living_word_admin.moderate.form.inc',
  );

  $items['admin/structure/lw/moderate/split/%'] = array(
    'title'             => '3. Moderate LWCs - Split node',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('living_word_admin_split_form', 5),
    'access callback'   => 'user_access',
    'access arguments'  => array('living_word_admin_moderate'),
    'file'              => 'living_word_admin.split.form.inc',
  );

  $items['admin/structure/lw/review'] = array(
    'title'             => '4. Review LWCs',
    'description'       => 'Step 4: Review lists of Living Word Comments, order them, etc.',
    'weight'            => 40,
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('living_word_admin_review_form'),
    'access callback'   => 'user_access',
    'access arguments'  => array('living_word_admin_review'),
    'file'              => 'living_word_admin.review.form.inc',
  );

  return $items;
}


/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter(&$element, &$form_state, $context).
 * https://api.drupal.org/api/drupal/modules!field!field.api.php/function/hook_field_widget_WIDGET_TYPE_form_alter/7
 * Specify the source text for the JS field widget, from which the quoted text
 * must be selected.
 */
function living_word_admin_field_widget_living_word_quote_widget_js_form_alter(&$element, &$form_state, $context) {
  $element['#source_text'] = t("The Word is alive");
  // TODO: get the verse range associated with the node, etc.
//  dpm($context, 'context');

  $form = &$context['form'];

  // on step 1 of the workflow, the lw_scripture field exists on the form
  if (!empty($form['lw_scripture'])) {

//    dpm($form);
//    dpm($form_state);


  }
}

